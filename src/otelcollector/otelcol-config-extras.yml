# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0


receivers:
  otlp:
    protocols:
      grpc:
#        endpoint: 0.0.0.0:4317
      http:
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"
  httpcheck/frontendproxy:
    targets:
      - endpoint: http://frontendproxy:${env:ENVOY_PORT}

  snmp:
    collection_interval: 10s
    endpoint: udp://172.24.79.29:161
    version: v2c
    community: public

    resource_attributes:
      resource_attr.name.1:
        indexed_value_prefix: probe

    metrics:
      snmp_cpu_user:
        unit: "By"
        gauge:
          value_type: int
        column_oids:
          - oid: "1.3.6.1.4.1.2021.11.9"
            resource_attributes:
              - resource_attr.name.1
  syslog:
    udp:
      listen_address: "0.0.0.0:1514"
    protocol: rfc3164
    location: UTC
    operators:
      - type: move
        from: attributes.message
        to: body
...
exporters:

  logzio/traces:
    account_token: "VLVEzMUQWgZFCnobKvvkAoFBLGjnZhQV"
    region: "us-east-1"

  prometheusremotewrite:
    endpoint: "https://listener.logz.io:8053"
    headers:
      Authorization: "Bearer JIySQTwXbjxqPjBYyNHmSoytvZPGAwql"

  logzio/logs:
    account_token: "ZSqeoxVrRhzPFgPJcZpBcdFjuaOhewaz"
    region: "us-east-1"

  debug:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 200
  otlp:
    endpoint: "jaeger:4317"
    tls:
      insecure: true
  otlp/logs:
    endpoint: "dataprepper:21892"
    tls:
      insecure: true
  otlphttp/prometheus:
    endpoint: "http://prometheus:9090/api/v1/otlp" ### confirm later - related to       - --enable-feature=otlp-write-receiver

#    endpoint: "0.0.0.0:8889"
#    resource_to_telemetry_conversion:
#      enabled: true
#    enable_open_metrics: true
#    const_labels:
#      job_name: otel-collector

processors:
  batch:
    send_batch_size: 10000
    timeout: 1s

  filter/ottl:
    error_mode: ignore
    metrics:
      metric:
        # FIXME: remove when a Metrics View is implemented in the checkout and productcatalog components
        # or when this issue is resolved: https://github.com/open-telemetry/opentelemetry-go-contrib/issues/3071
        - 'name == "rpc.server.duration"'
  transform:
    metric_statements:
      - context: metric
        statements:
          # FIXME: remove when this issue is resolved: https://github.com/open-telemetry/opentelemetry-java/issues/4834
          - set(description, "") where name == "queueSize"
          # FIXME: remove when this issue is resolved: https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1958
          - set(description, "") where name == "http.client.duration"

connectors:
  spanmetrics:

service:
  telemetry:
    logs:
      level: "error"
    metrics:
      level: detailed
      address: 0.0.0.0:8888
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [logzio/traces, logzio/logs, otlp, debug, spanmetrics]
    metrics:
      receivers: [httpcheck/frontendproxy, otlp, spanmetrics, snmp]
      processors: [filter/ottl, transform, batch]
      exporters: [prometheusremotewrite, otlphttp/prometheus, debug]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/logs, debug, logzio/logs]
      
      
  
